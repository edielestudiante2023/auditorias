# ============================================================
# Nginx Server Block Configuration for Cycloid Auditor√≠as
# ============================================================
#
# Installation Instructions:
# --------------------------
# 1. Copy this file to Nginx sites directory:
#    - Linux: /etc/nginx/sites-available/auditorias
#    - Create symlink: sudo ln -s /etc/nginx/sites-available/auditorias /etc/nginx/sites-enabled/
#    - macOS (Homebrew): /usr/local/etc/nginx/servers/auditorias.conf
#
# 2. Update paths and domain below to match your setup
#
# 3. Test configuration:
#    sudo nginx -t
#
# 4. Reload Nginx:
#    sudo systemctl reload nginx
#    OR: sudo nginx -s reload
#
# 5. Add to hosts file if using local domain:
#    127.0.0.1  auditorias.local
#
# 6. Verify: curl http://auditorias.local/health
# ============================================================

server {
    # Server configuration
    listen 80;
    listen [::]:80;

    server_name auditorias.local www.auditorias.local;

    # Root directory points to public folder
    root /var/www/auditorias/public;

    # Default file
    index index.php index.html;

    # Character set
    charset utf-8;

    # Logging
    access_log /var/log/nginx/auditorias-access.log;
    error_log /var/log/nginx/auditorias-error.log warn;

    # ========================================
    # Main location block
    # ========================================
    location / {
        # Try files in order: actual file, directory, then route to index.php
        try_files $uri $uri/ /index.php?$query_string;
    }

    # ========================================
    # PHP-FPM Configuration
    # ========================================
    location ~ \.php$ {
        # Security: Prevent access to non-existent PHP files
        try_files $uri =404;

        # FastCGI params
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;  # Adjust PHP version as needed
        # OR for TCP: fastcgi_pass 127.0.0.1:9000;

        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Include default FastCGI params
        include fastcgi_params;

        # Additional FastCGI settings
        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
    }

    # ========================================
    # SECURITY: Deny access to sensitive directories
    # ========================================

    # Deny access to app/ directory
    location ~ ^/\.\./app/ {
        deny all;
        return 404;
    }

    location ^~ /app/ {
        deny all;
        return 404;
    }

    # Deny access to writable/ directory
    location ^~ /writable/ {
        deny all;
        return 404;
    }

    # Deny access to vendor/ directory
    location ^~ /vendor/ {
        deny all;
        return 404;
    }

    # Deny access to .env and other dot files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Deny access to composer files
    location ~ ^/(composer\.(json|lock)|phpunit\.xml)$ {
        deny all;
        return 404;
    }

    # ========================================
    # Static file handling and caching
    # ========================================

    # Images, CSS, JS (long cache)
    location ~* \.(jpg|jpeg|gif|png|svg|css|js|ico|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Prevent logging of favicon and robots.txt
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # ========================================
    # Security headers
    # ========================================

    # Prevent clickjacking
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Enable XSS protection
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Referrer policy
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # ========================================
    # Gzip compression
    # ========================================

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # ========================================
    # Client upload limits
    # ========================================

    # Maximum upload size (adjust based on your needs)
    client_max_body_size 20M;
    client_body_buffer_size 128k;
}

# ============================================================
# HTTPS Server Block (Production - Uncomment and configure)
# ============================================================
#
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#
#     server_name auditorias.local www.auditorias.local;
#
#     root /var/www/auditorias/public;
#     index index.php index.html;
#
#     # SSL Configuration
#     ssl_certificate /etc/letsencrypt/live/auditorias.local/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/auditorias.local/privkey.pem;
#
#     # Modern SSL settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
#     ssl_prefer_server_ciphers off;
#
#     # SSL session cache
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # HSTS (uncomment after testing)
#     # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # Logging
#     access_log /var/log/nginx/auditorias-ssl-access.log;
#     error_log /var/log/nginx/auditorias-ssl-error.log warn;
#
#     # Same location blocks as HTTP server
#     location / {
#         try_files $uri $uri/ /index.php?$query_string;
#     }
#
#     location ~ \.php$ {
#         try_files $uri =404;
#         fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
#         fastcgi_index index.php;
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         include fastcgi_params;
#     }
#
#     # Same security restrictions
#     location ^~ /app/ { deny all; return 404; }
#     location ^~ /writable/ { deny all; return 404; }
#     location ^~ /vendor/ { deny all; return 404; }
#     location ~ /\. { deny all; return 404; }
# }
#
# # HTTP to HTTPS redirect
# server {
#     listen 80;
#     listen [::]:80;
#     server_name auditorias.local www.auditorias.local;
#     return 301 https://$server_name$request_uri;
# }

# ============================================================
# Quick Verification Commands
# ============================================================
#
# Test configuration syntax:
#   sudo nginx -t
#
# Reload Nginx:
#   sudo systemctl reload nginx
#   OR: sudo nginx -s reload
#
# View error logs:
#   sudo tail -f /var/log/nginx/auditorias-error.log
#
# View access logs:
#   sudo tail -f /var/log/nginx/auditorias-access.log
#
# Test endpoint:
#   curl http://auditorias.local/health
#   Expected: {"status":"ok","timestamp":"2025-01-16 10:30:00"}
#
# Test with headers:
#   curl -I http://auditorias.local/
#
# ============================================================
#
# Common PHP-FPM socket locations by OS/distribution:
# - Ubuntu 22.04: /var/run/php/php8.2-fpm.sock
# - Ubuntu 20.04: /var/run/php/php8.1-fpm.sock
# - Ubuntu 18.04: /var/run/php/php7.4-fpm.sock
# - CentOS/RHEL: /var/run/php-fpm/www.sock
# - macOS (Homebrew): /usr/local/var/run/php-fpm.sock
#
# Check your PHP-FPM socket location:
#   sudo find /var/run -name "php*fpm.sock"
#
# ============================================================
